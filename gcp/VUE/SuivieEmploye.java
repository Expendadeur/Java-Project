/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gcp.VUE;

import gcp.Database.DatabaseConnection;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.MessageFormat;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class SuivieEmploye extends javax.swing.JPanel {
 // Vider le modèle de tableau avant de le remplir
  
    public SuivieEmploye() {
        initComponents();
        loadEmployes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        n = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        suivie = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(122, 112, 140));
        jPanel1.setPreferredSize(new java.awt.Dimension(1449, 50));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SUIVIE ET CONTROLE DES EMPLOYES");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(jLabel1)
                .addContainerGap(837, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        n.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nMouseEntered(evt);
            }
        });
        n.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                nInputMethodTextChanged(evt);
            }
        });
        n.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                nPropertyChange(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel2.setText("Rechercher");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(581, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(76, 76, 76)
                .addComponent(n, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(630, 630, 630))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(n, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1450, 80));

        suivie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nom", "Prénom", "Matricule", "Téléphone", "Rôle", "Statut", "ID"
            }
        ));
        jScrollPane1.setViewportView(suivie);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 870, 350));

        jButton1.setBackground(new java.awt.Color(0, 135, 51));
        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Imprimer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 150, 210, 30));

        jButton2.setBackground(new java.awt.Color(204, 0, 0));
        jButton2.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Supprimer");
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, 130, 30));

        jPanel3.setBackground(new java.awt.Color(153, 0, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 640, 1220, 50));

        jButton3.setBackground(new java.awt.Color(0, 204, 204));
        jButton3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton3.setText("Presence");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 550, 147, 32));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        toggleEmployeeStatus();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void nPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_nPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_nPropertyChange


    private void nInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_nInputMethodTextChanged
      
    }//GEN-LAST:event_nInputMethodTextChanged

    private void nMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nMouseEntered
 searchEmployes();        // TODO add your handling code here:
    }//GEN-LAST:event_nMouseEntered

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       printTable();
    }//GEN-LAST:event_jButton1ActionPerformed
private void printTable() {
    MessageFormat title= new MessageFormat("RAPPORT DES EMPLOYES");
    MessageFormat pieds= new MessageFormat("RAPPORT DES EMPLOYES{0,number,Integer}");
    
    try {
       PrintRequestAttributeSet set =new HashPrintRequestAttributeSet();
       set.add(OrientationRequested.LANDSCAPE);
       suivie.print(JTable.PrintMode.FIT_WIDTH,title,pieds,true,set,true);
       JOptionPane.showMessageDialog(this, "L'impression reussie.");
    } catch (java.awt.print.PrinterException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erreur lors de l'impression.");
    }
} 
    private void loadEmployes() {
    DefaultTableModel tableModel = (DefaultTableModel) suivie.getModel();
    tableModel.setRowCount(0);
        String query = "SELECT IdEmploye, Nom_Employe, Prenom_Employe, Matricule, NumTel_Employe, role, Statut FROM employe";
        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(query);
             ResultSet rs = pstmt.executeQuery()) {
            while (rs.next()) {
                Object[] row = {
                    rs.getString("Nom_Employe"),
                    rs.getString("Prenom_Employe"),
                    rs.getString("Matricule"),
                    rs.getString("NumTel_Employe"),
                    rs.getString("role"),
                    rs.getString("Statut"),// Ajouter le statut
                    rs.getInt("IdEmploye")
                };
                tableModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur lors du chargement des employés.");
        }
    }

    private void deleteSelectedEmploye() {
          DefaultTableModel tableModel = (DefaultTableModel) suivie.getModel();
           //tableModel.setRowCount(0);
        int selectedRow = suivie.getSelectedRow();
        if (selectedRow != -1) {
            int employeId = (int) tableModel.getValueAt(selectedRow, 0);
            String query = "DELETE FROM employe WHERE IdEmploye = ?";
            try (Connection conn = DatabaseConnection.getConnection();
                 PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setInt(1, employeId);
                pstmt.executeUpdate();
                tableModel.removeRow(selectedRow);
                JOptionPane.showMessageDialog(this, "Employé supprimé avec succès.");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erreur lors de la suppression de l'employé.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un employé à supprimer.");
        }
    }
    private void toggleEmployeeStatus() {
    DefaultTableModel tableModel = (DefaultTableModel) suivie.getModel();
    //tableModel.setRowCount(0);
        int selectedRow = suivie.getSelectedRow();
        if (selectedRow != -1) {
            int employeId = (int) tableModel.getValueAt(selectedRow,6);
            String currentStatus = (String) tableModel.getValueAt(selectedRow, 5);
            String newStatus = currentStatus.equals("Présent") ? "Absent" : "Présent"; // Toggle the status
            String query = "UPDATE employe SET Statut = ? WHERE IdEmploye = ?";
            try (Connection conn = DatabaseConnection.getConnection();
                 PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, newStatus);
                pstmt.setInt(2, employeId);
                pstmt.executeUpdate();
                tableModel.setValueAt(newStatus, selectedRow, 5); // Update the table model
                JOptionPane.showMessageDialog(this, "Statut mis à jour avec succès.");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erreur lors de la mise à jour du statut.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un employé pour changer le statut.");
        }
    }
  private void searchEmployes() {
      DefaultTableModel tableModel = (DefaultTableModel) suivie.getModel();
        String searchTerm = n.getText().trim();
        String query = "SELECT IdEmploye, Nom_Employe, Prenom_Employe, Matricule, NumTel_Employe, role, Statut FROM employe WHERE Nom_Employe LIKE ? OR Prenom_Employe LIKE ?";

        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, "%" + searchTerm + "%");
            pstmt.setString(2, "%" + searchTerm + "%");
            ResultSet rs = pstmt.executeQuery();

            tableModel.setRowCount(0); // Clear existing rows
            while (rs.next()) {
                Object[] row = {
                    rs.getString("Nom_Employe"),
                    rs.getString("Prenom_Employe"),
                    rs.getString("Matricule"),
                    rs.getString("NumTel_Employe"),
                    rs.getString("role"),
                    rs.getString("Statut"),
                    rs.getInt("IdEmploye")
                };
                tableModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur lors de la recherche des employés.");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField n;
    private javax.swing.JTable suivie;
    // End of variables declaration//GEN-END:variables
}
